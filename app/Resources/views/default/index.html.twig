{% extends 'base.html.twig' %}

{% block body %}
    <div id="wrapper">
        <div id="container">
            <div id="welcome">
                <h1><span>jQuery Symfony 2 Todos</span></h1>
            </div>

            <div id="status">
				<section id="todoapp">
					<header id="header">
						<input id="new-todo" placeholder="What needs to be done?" autofocus="">
					</header>
						<section id="main">
							<input checked="checked" id="toggle-all" type="checkbox">
							<label for="toggle-all">Mark all as complete</label>
							<ul id="todo-list">
							</ul>
						</section>
						<footer id="footer">
							<span id="todo-count"><strong>0</strong> items left</span>
							<ul id="filters">
								<li><a data-allowed="true" class="filter selected" href="#/all">All</a></li>
								<li><a data-allowed="true" class="filter" href="#/active">Active</a></li>
								<li><a data-allowed="true" class="filter" href="#/completed">Completed</a></li>
							</ul>
						</footer>
				</section>
            </div>

        </div>
    </div>
{% endblock %}

{% block stylesheets %}
	<link href="{{ asset('css/bootstrap.css') }}" rel="stylesheet" />
	<link href="{{ asset('css/bootstrap.css.map') }}" rel="stylesheet" />
	<link href="{{ asset('css/base.css') }}" rel="stylesheet" />
	<link href="{{ asset('css/index.css') }}" rel="stylesheet" />
	<link href="{{ asset('css/app.css') }}" rel="stylesheet" />
	<style>
		body { background: #F5F5F5; font: 18px/1.5 sans-serif; }
		h1, h2 { line-height: 1.2; margin: 0 0 .5em; }
		h1 { font-size: 36px; }
		h2 { font-size: 21px; margin-bottom: 1em; }
		p { margin: 0 0 1em 0; }
		#wrapper { background: #FFF; margin: 1em auto; max-width: 800px; width: 95%; }
		#container { padding: 2em; }

		@media (min-width: 768px) {
			#wrapper { width: 80%; margin: 2em auto; }

			@-webkit-keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
			@keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
			.sf-toolbar { opacity: 0; -webkit-animation: fade-in 1s .2s forwards; animation: fade-in 1s .2s forwards;}
		}
	</style>
	<script type="text/javascript" src="{{ asset('js/jquery.js') }}"></script>
	<script type="text/javascript" src="{{ asset('js/bootstrap.min.js') }}"></script>
	<script type="text/javascript">
	
	(function ($, root, undefined) {
		
		$(function () {

			'use strict';

			var count = 0,
				hash = location.hash,
				path = "",
				selector = false;
			
			$.footerCount = function(count) {
				var content = (count === 1) ? '<strong>' + count + '</strong> item left' : '<strong>' + count + '</strong> items left';
				$('#todo-count').html(content);
			};
			
			$.contentDisplay = function(response) {
				var i = 0, content = "", className = "", checked = "";
				if(response.status){
					count = 0;
					while(i < response.count) {
						className = "";
						checked = "";
						if(response[i]['completed']) {
							className = 'class="completed" ';
							checked = "checked ";
						} else {
							count++;
						}
						content += '<li ' + className + ' data-allowed="true" data-id="' + response[i]['id'] + '"><div class="view"><input class="toggle" type="checkbox" ' + checked + ' /><label>' + response[i]['title'] + '</label><button data-allowed="true" class="destroy"></button></div><input class="edit" value="' + response[i]['title'] + '" /></li>';
						i++;
					}				  
					$('#todo-list').empty();
					$('#todo-list').html(content);
					$('#main, #footer').css('display', 'block');
					$('#todo-count').html($.footerCount(count));
				}
			};

			$.selectFilter = function(selector) {
				$('.filter').removeClass('selected');
				selector.addClass('selected').data('allowed', true);
			};	
			
			$.filterContent = function(hash, selector, path) {
			
				if(hash === '#/all' || hash === '') {
					path = '{{path('app_view_tasks')}}';
					selector = $('.filter[href="#/all"]');
				}	
				
				if(hash === '#/active') {
					path = '{{path('app_view_activetasks')}}';
					selector = $('.filter[href="#/active"]');
				}	

				if(hash === '#/completed') {
					path = '{{path('app_view_completetasks')}}';
					selector = $('.filter[href="#/completed"]');
				}	

				$.ajax({
					type : 'post',
					dataType : 'json',
					url : path,
					data : {},
					error: function(response) {
						item.data('allowed', true);
					}, 
					success: function(response) {
						$.contentDisplay(response);
						$.selectFilter(selector);
					}
				});			
			
			};
			
			hash = location.hash;	
			$.filterContent(hash, selector, path);
			
			$('#new-todo').on('keyup', function(event){
				var input = $(event.target), 
					val = input.val().trim();

				if (event.which !== 13 || !val) {
					return;
				}

				$.ajax({
					type : 'post',
					dataType : 'json',
					url : '{{path('app_add_task')}}',
					data : { title: val },
					error: function(response) {
						var res = response;
					}, 
					success: function(response) {
						if(response.status){
							input.val('');
							hash = location.hash;	
							$.filterContent(hash, selector, path);
						}
					}
				});
			
			});
			
			
			$('#filters').on('click', '.filter', function(){
				var filter = $(this),
					allowed = filter.data('allowed');
					
				if(allowed) {

					hash = filter.attr('href');	

					if(hash === '#/all' || hash === '') {
						path = '{{path('app_view_tasks')}}';
						selector = $('.filter[href="#/all"]');
					}	
					
					if(hash === '#/active') {
						path = '{{path('app_view_activetasks')}}';
						selector = $('.filter[href="#/active"]');
					}	

					if(hash === '#/completed') {
						path = '{{path('app_view_completetasks')}}';
						selector = $('.filter[href="#/completed"]');
					}	
				
					filter.data('allowed', false);

					$.ajax({
						type : 'post',
						dataType : 'json',
						url : path,
						data : {},
						error: function(response) {
							if(hash === '#/active' || hash === '#/completed') {
								$('#todo-list').empty();
								$('#main, #footer').css('display', 'block');
								filter.data('allowed', true);								
							}	
						}, 
						success: function(response) {
							$.contentDisplay(response);
							$.selectFilter(selector);
							filter.data('allowed', true);
						}
					});
				
				}
				
			});				
			
			$('#todo-list').on('change', '.toggle', function(){
				var toogle = $(this),
					item = toogle.parent().parent(),
					id = item.data('id'),
					allowed = item.data('allowed');	
				
				if(allowed) {
					item.data('allowed', false);

					if(item.hasClass('completed')) {
					
						$.ajax({
							type : 'post',
							dataType : 'json',
							url : '{{path('app_active_task')}}',
							data : { id: id },
							error: function(response) {
								item.data('allowed', true);
							}, 
							success: function(response) {
								if(response.status){
									item.removeClass('completed');
									toogle.removeAttr('checked');		
									$('#todo-count').html($.footerCount(++count));
																		
									item.data('allowed', true);
									
									hash = location.hash;	
									$.filterContent(hash, selector, path);
									
								}
							}
						}); 					
					
					} else {

						$.ajax({
							type : 'post',
							dataType : 'json',
							url : '{{path('app_complete_task')}}',
							data : { id: id },
							error: function(response) {
								item.data('allowed', true);
							}, 
							success: function(response) {
								if(response.status){
									item.addClass('completed');
									toogle.attr('checked', 'checked');		
									$('#todo-count').html($.footerCount(--count));
									item.data('allowed', true);

									hash = location.hash;	
									$.filterContent(hash, selector, path);
									
								}
							}
						}); 					
					
					}
				
				}
				
			});
			
			$('#todo-list').on('click', '.destroy', function(){
				var destroy = $(this),
					item = destroy.parent().parent(),
					id = item.data('id'),
					allowed = item.data('allowed');	
			
				if(allowed) {
					item.data('allowed', false);

					$.ajax({
						type : 'post',
						dataType : 'json',
						url : '{{path('app_delete_task')}}',
						data : { id: id },
						error: function(response) {
							item.data('allowed', true);
						}, 
						success: function(response) {
							if(response.status){
								item.data('allowed', true);
								hash = location.hash;	
								$.filterContent(hash, selector, path);
							}
						}
					});
					
				}			
			
			});

			$('#todo-list').on('dblclick', 'label', function(event){
				$('#todo-list > li').removeClass('editing');
				var input = $(event.target).closest('li').addClass('editing').find('.edit');
				input.val(input.val()).focus();
			});			
			
			$('#todo-list').on('keyup', '.edit', function(event){
				if (event.which === 13) {
					var edit = $(event.target),
						val = edit.val().trim(),
						item = edit.parent(),
						id = item.data('id'),
						allowed = item.data('allowed');	
					
					if (val && allowed) {
						if (edit.data('abort')) {
							edit.data('abort', false);
						} else {
						
							item.data('allowed', false);
						
							$.ajax({
								type : 'post',
								dataType : 'json',
								url : '{{path('app_edit_task')}}',
								data : { id: id, title: val },
								error: function(response) {
									item.data('allowed', true);
								}, 
								success: function(response) {
									if(response.status){
										item.data('allowed', true);
										hash = location.hash;	
										$.filterContent(hash, selector, path);
									}
								}
							});

						}			
					}
			
				}

				if (event.which === 24) {
					$(event.target).data('abort', true).blur();
				}			
			});
			
			
		});
		
	})(jQuery, this);	
		
	</script>

{% endblock %}
